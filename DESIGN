ship - Packages Shipper

A 'system' is an individual computer upon which actions can be done. A 'manifest' describes a list of
packages. A 'package' is an archive of files, a 'hook' file, and a 'list' file. The hook file is a
ruby script that executes upon package shipment which may execute aribtrary tasks. A 'list' file is
a list of all possible files created by the package during shipment.

A computer can define multiple 'systems', each given a unique identifier when created. One of them
is default. This allows the creation of multiple install roots.

Installing a package:
	* Find source System and Package
	* Find target System
	* Send target system source-system:package
	* target acquires shipment of files, installs
	* target updates database

Adding a repo
	* Download repo manifest
	* Repolist.add

Installing a local package (simple package management, no -t or -s given)
	* No -s => search repolist for package name, get system
	* No -t => local system is target
	* bypass client-server, just install normally

Given a source-system and a package object, it is possible to ask the source-system to
ship the package to the target.

A Repolist is a list of systems that are to be used when no source is specified.

Client-server model. If target is 'local', skip the client-server model, pass directly.

ship -s <source-system> -t <target-system> <package-name>
Default target-system is local machine. If -s isn't specified, the first System to
contain the package is used.

